# -*- coding: utf-8 -*-
"""Adani Stocks Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jCcdXvM2kCm-isVKNCWYcQ2yqfiIntc2
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn import metrics

stock_data = pd.read_csv('/content/adani.csv')

stock_data.head()

stock_data.tail()

stock_data.shape

stock_data.info()

stock_data.isnull().sum()

stock_data.describe()

stock_data=stock_data.drop(['timestamp'],axis=1)

print(correlation['close'])

sns.distplot(stock_data['close'],color='green')

X = stock_data.drop(['close','symbol','company'],axis=1)
Y = stock_data['close']

print(X)

print(Y)

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state=2)

regressor = RandomForestRegressor(n_estimators=100)

regressor.fit(X_train,Y_train)

test_data_prediction = regressor.predict(X_test)

print(test_data_prediction)

error_score = metrics.r2_score(Y_test, test_data_prediction)
print("R squared error : ", error_score)

Y_test = list(Y_test)

plt.plot(Y_test, color='blue', label = 'Actual Value')
plt.plot(test_data_prediction, color='green', label='Predicted Value')
plt.title('Actual Price vs Predicted Price')
plt.xlabel('Number of values')
plt.ylabel('Stock Closing Price')
plt.legend()
plt.show()